import numpy as np
import matplotlib as mp
import random as rd

#Carte = dict[str : float]

#Plats : Carte

Plats = { "Assiette végétarienne" : 10.30,
          "Poulet fermier et pommes grenades" : 25.00,
          "N'importe quoi" : 18.30}

#Entrees : Carte

Entrees = { "Salade fermière" : 10.00,
            "Assiette de fromage" : 5.20,
            "Thonmate -Spécialité du chef-" : 12.00}

t=0 #temps
v=0 #visites
pers=0 #nombre de clients reçus
dep=1 #facteur de déplacement
degust=0 #temps depuis que les plats sont servis
cellule=np.zeros([8,6]) #cellule graphique

def Fvp(List,val): #fixe la valeur d'une position
    cellule[List[0],List[1]]=val

def Rvp(List): #renvoie la valeur d'une position
    return cellule[List[0],List[1]]

def Proba(p):
    n=rd.random()
    s=0
    for k in p:
        s+=p[k]
        if u<s:
            return k

def Keyval(D,val): #renvoie une clé à partir de sa valeur dans un dictionnaire (valeurs supposées uniques)
    for i in D:
        if D[i]==val:
            return i

table=[[3,2],[3,3],[4,2],[4,3]] #emplacement table
chaises=[[2,2],[2,3],[5,2],[5,3]] #emplacement chaises
chaises1=[[2,1],[2,4],[5,1],[5,4]] #emplacement pour s'assoir
entree=[[0,0],[0,1],[1,0],[1,1]] #epmlacement entrée
serveur=[7,5] #emplacement serveur
cibl_serv=serveur #position cible serveur
Fvp(cibl_serv,5) #génération serveur
cl={} #dictionnaire associant les clients à leur emplacement
cibl_cl={} #association des clients avec leur position cible
comm={} #dictionnaire associant les commandes à leur temps de cuisson
statabl=0 #état de la table
prepar=0 #état de la préparation
activ=0 #activité du serveur
placnot=[4,4] #place pour prendre des commandes
cuisines=[7,5] #place pour l'interaction avec les cuisines
accueil=[0,2] #place pour accueillir les clients
E=[] #liste des entrées commandées (optionnel)
P=[] #liste des plats commandés (optionnel)

for i in table:
    Fvp(i,8) #génération de tables

for i in chaises:
    Fvp(i,6) #génération de chaises

def arriv(): #arrivée de clients
    global v,pers
    if t>=100*v:
        if t>=100*(v+1):
            v+=1
        elif not(1 in [Rvp(k) for k in entree]):
            group=rd.randint(1,4)
            for i in range(group):
                pers+=1
                cl[pers]=entree[i]
                Fvp(cl[pers],1)
                cibl_cl[pers]=cl[pers]
                v+=1

def depart(): #disparition de clients
    if cellule[0,5]==2:
        del cibl_cl[Keyval(cl,[0,5])]
        del cl[Keyval(cl,[0,5])]
        cellule[0,5]=0

def deplac(coord,direct): #gestion d'un déplacement d'une case
    c=coord
    v=Rvp(coord)
    if direct==1: #haut
        c=[c[0]-1,c[1]]
    elif direct==2: #droite
        c=[c[0],c[1]+1]
    elif direct==3: #bas
        c=[c[0]+1,c[1]]
    elif direct==4: #gauche
        c=[c[0],c[1]-1]
    if Rvp(c)==0:
        Fvp(coord,0) #libération d'un emplacement
        Fvp(c,v) #occupation d'une nouvelle case
    return c

def ciblag(): #gestion des déplacements ciblés
    global serveur
    for i in range(dep): #déplacement du serveur
        if cibl_serv[0]<serveur[0]:
            serveur=deplac(serveur,1)
        elif cibl_serv[1]<serveur[1]:
            serveur=deplac(serveur,4)
        elif cibl_serv[1]>serveur[1]:
            serveur=deplac(serveur,2)
        elif cibl_serv[0]>serveur[0]:
            serveur=deplac(serveur,3)
        for j in cl: #déplacement des clients
            if cibl_cl[j][0]<cl[j][0]:
                if Rvp([cl[j][0]-1,cl[j][1]])==0:
                    cl[j]=deplac(cl[j],1)
                else:
                    cl[j]=deplac(cl[j],2)
            elif cibl_cl[j][1]>cl[j][1]:
                cl[j]=deplac(cl[j],2)
            elif cibl_cl[j][0]>cl[j][0]:
                cl[j]=deplac(cl[j],3)

def service(): #service de la table
    global degust,statabl
    if statabl==2: #table avec plats
        degust+=1
    elif statabl==1: #table sale
        degust=0
    for i in cl:
        if (cibl_cl[i]==cl[i]) and (cibl_cl[i] in chaises1): #clients près des chaises
            Fvp(cl[i],0)
            cl[i]=cibl_cl[i]=chaises[Keyval(chaises1,cl[i])]
            Fvp(chaises[Keyval(chaises,cl[i])],7)
        if cl[i] in chaises:
            if activ==5:
                en=rd.choice(Entrees)
                pl=rd.choice(Plats)
                E.append(en)
                P.append(pl)
                comm[0].append(Entrees[en])
                comm[1].append(Plats[pl])
            elif (activ==7) and (serveur==placnot):
                Fvp(tables[Keyval(chaises,cl[i])],8.5)
            elif (activ==9) and (serveur==placnot):
                Fvp(tables[Keyval(chaises,cl[i])],9)
                statabl=2
            elif degust==20:
                Fvp(cl[i],6)
                Fvp(tables[Keyval(chaises,cl[i])],9.5)
                cl[i]=chaises1[Keyval(chaises,cl[i])]
                cibl_cl[i]=[0,6]
                Fvp(cl[i],2)
                statabl=1

def tach(): #assignation du serveur aux taches à accomplir
    global statabl, activ
    if statabl==1: #la table est sale et déserte
        activ=1 #assignation au débarrassage de la table
        cibl_serv=placnot
    elif (statabl==0) and (serveur==placnot): #le serveur vient de finir de débarrasser la table
        activ=0 #le serveur remporte les couverts
        cibl_serv=cuisines
    elif (activ==0) and (statabl==0) and (serveur==cuisines) and (1 in [Rvp(k) for k in entree]):
        #des clients sont arrivés et le serveur est inactif
        activ=3 #le serveur s'occupe de l'accueil
        cibl_serv=accueil
    elif (activ==3) and (serveur==accueil): #le serveur vient d'accueillir les clients
        activ=4 #le serveur amène les clients à la table
        cibl_serv=placnot
        d=0
        for i in cl:
            if cl[i] in entree:
                cibl_cl[i]=chaises1[d]
                d+=1
    elif (activ==4) and (serveur==placnot) and (len(np.argwhere(cellule==1 and not(cellule in entree)))==0):
        #le serveur vient de guider les clients à leur table
        activ=5 #le serveur prend les commandes
    elif activ==5: #les clients viennent de commander
        activ=6 #le serveur va renseigner les cuisines
        cibl_serv=cuisines
    elif (activ==6) and (prepar==1): #les entrées sont prètes
        activ=7 #le serveur apporte les entrées
        cibl_serv=placnot
    elif (activ==7) and (serveur==placnot): #les entrées sont servies
        activ=8 #le serveur va attendre les plats
        cibl_serv=cuisines
    elif (activ==8) and (serveur==cuisines) and (prepar==2): #les plats sont prèts
        activ=9 #le serveur apporte les plats
        cibl_serv=placnot
    elif (activ==9) and (serveur==placnot): #les plats sont servis
        activ=0 #le serveur attend sans rien faire
        statabl=2
        cibl_serv=cuisines

arriv()
ciblag()
service()
tach()
depart()
print(cellule)
